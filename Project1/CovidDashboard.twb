<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Лист1 (TableauTable1)' inline='true' name='federated.002dpc20dqdiij1ahlkeg1h6licq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable1' name='excel-direct.0srl1130kywgwu0zwqyzj1ein6sv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/AnalystProject/TableauTable1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0srl1130kywgwu0zwqyzj1ein6sv' name='Лист1' table='[Лист1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0srl1130kywgwu0zwqyzj1ein6sv' name='Лист1' table='[Лист1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Лист1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_FA8E269A3429473EBA8AD7B0FE87D321]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_FA8E269A3429473EBA8AD7B0FE87D321]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_percentage]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>death_percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_FA8E269A3429473EBA8AD7B0FE87D321]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Лист1' datatype='table' name='[__tableau_internal_object_id__].[Лист1_FA8E269A3429473EBA8AD7B0FE87D321]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Darya/AppData/Local/Temp/TableauTemp/#TableauTemp_1pzszcz13lwfge1ans0701n1sm4u.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/16/2024 03:04:24 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Лист1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_FA8E269A3429473EBA8AD7B0FE87D321]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Лист1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_FA8E269A3429473EBA8AD7B0FE87D321]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death_percentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Лист1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_FA8E269A3429473EBA8AD7B0FE87D321]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Лист1' id='Лист1_FA8E269A3429473EBA8AD7B0FE87D321'>
            <properties context=''>
              <relation connection='excel-direct.0srl1130kywgwu0zwqyzj1ein6sv' name='Лист1' table='[Лист1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='death_percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Лист1 (TableauTable2)' inline='true' name='federated.1ylktlz1rl0yq91dztl9019qr6wq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable2' name='excel-direct.111p2ib1u4u7qc1b4yjhb12gzrki'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/AnalystProject/TableauTable2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.111p2ib1u4u7qc1b4yjhb12gzrki' name='Лист1' table='[Лист1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_deaths_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.111p2ib1u4u7qc1b4yjhb12gzrki' name='Лист1' table='[Лист1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_deaths_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Лист1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_089070AA9B5647FCAA0926ACA21423B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths_count]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>total_deaths_count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_089070AA9B5647FCAA0926ACA21423B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Лист1' datatype='table' name='[__tableau_internal_object_id__].[Лист1_089070AA9B5647FCAA0926ACA21423B2]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Darya/AppData/Local/Temp/TableauTemp/#TableauTemp_14318bi1wcv4aw116imnw15pn2z7.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/16/2024 03:05:09 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Лист1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LRU_RRU' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_089070AA9B5647FCAA0926ACA21423B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths_count</remote-alias>
              <ordinal>1</ordinal>
              <family>Лист1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_089070AA9B5647FCAA0926ACA21423B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Лист1' id='Лист1_089070AA9B5647FCAA0926ACA21423B2'>
            <properties context=''>
              <relation connection='excel-direct.111p2ib1u4u7qc1b4yjhb12gzrki' name='Лист1' table='[Лист1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_deaths_count' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Лист1 (TableauTable3)' inline='true' name='federated.1cba9v71qzzwu1157k1mu0kb4x71' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable3' name='excel-direct.1pvhx3g0g8th3m1asfxk610tuu5a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/AnalystProject/TableauTable3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1pvhx3g0g8th3m1asfxk610tuu5a' name='Лист1' table='[Лист1$]' type='table'>
          <columns gridOrigin='A1:D420:no:A1:D420:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_infection_count' ordinal='2' />
            <column datatype='real' name='percent_population_infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1pvhx3g0g8th3m1asfxk610tuu5a' name='Лист1' table='[Лист1$]' type='table'>
          <columns gridOrigin='A1:D420:no:A1:D420:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_infection_count' ordinal='2' />
            <column datatype='real' name='percent_population_infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Лист1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D420:no:A1:D420:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_F8F8B8DB74D04809ACEA754491C7AFAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_F8F8B8DB74D04809ACEA754491C7AFAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_F8F8B8DB74D04809ACEA754491C7AFAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_population_infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_population_infected]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>percent_population_infected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_F8F8B8DB74D04809ACEA754491C7AFAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Лист1' datatype='table' name='[__tableau_internal_object_id__].[Лист1_F8F8B8DB74D04809ACEA754491C7AFAA]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Darya/AppData/Local/Temp/TableauTemp/#TableauTemp_15686050kd4n6v114f1ml175750t.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/16/2024 03:05:22 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Лист1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LRU_RRU' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_F8F8B8DB74D04809ACEA754491C7AFAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Лист1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_F8F8B8DB74D04809ACEA754491C7AFAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infection_count</remote-alias>
              <ordinal>2</ordinal>
              <family>Лист1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>190</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_F8F8B8DB74D04809ACEA754491C7AFAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percent_population_infected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percent_population_infected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percent_population_infected</remote-alias>
              <ordinal>3</ordinal>
              <family>Лист1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_F8F8B8DB74D04809ACEA754491C7AFAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Лист1' id='Лист1_F8F8B8DB74D04809ACEA754491C7AFAA'>
            <properties context=''>
              <relation connection='excel-direct.1pvhx3g0g8th3m1asfxk610tuu5a' name='Лист1' table='[Лист1$]' type='table'>
                <columns gridOrigin='A1:D420:no:A1:D420:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='highest_infection_count' ordinal='2' />
                  <column datatype='real' name='percent_population_infected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Лист1 (TableauTable4)' inline='true' name='federated.0bc5nds1vh2bg6112uhvk1pbv835' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableauTable4' name='excel-direct.04lgsry1lg818p1255m3x1jl7ips'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/AnalystProject/TableauTable4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.04lgsry1lg818p1255m3x1jl7ips' name='Лист1' table='[Лист1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
            <column datatype='integer' name='highest_infection_count' ordinal='3' />
            <column datatype='real' name='percent_population_infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.04lgsry1lg818p1255m3x1jl7ips' name='Лист1' table='[Лист1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
            <column datatype='integer' name='highest_infection_count' ordinal='3' />
            <column datatype='real' name='percent_population_infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Лист1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_7F31AE43BFFA446095CD2F1E018981A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_7F31AE43BFFA446095CD2F1E018981A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_7F31AE43BFFA446095CD2F1E018981A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_7F31AE43BFFA446095CD2F1E018981A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_population_infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_population_infected]</local-name>
            <parent-name>[Лист1]</parent-name>
            <remote-alias>percent_population_infected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_7F31AE43BFFA446095CD2F1E018981A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Лист1' datatype='table' name='[__tableau_internal_object_id__].[Лист1_7F31AE43BFFA446095CD2F1E018981A5]' role='measure' type='quantitative' />
      <column datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Darya/AppData/Local/Temp/TableauTemp/#TableauTemp_13jx4lf0e5mqnb1174f4q19pdedi.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/16/2024 03:06:49 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table'>
            <columns>
              <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' />
            </columns>
          </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table'>
            <columns>
              <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' />
            </columns>
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Лист1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>386</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LRU_RRU' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_7F31AE43BFFA446095CD2F1E018981A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Лист1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>635</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_7F31AE43BFFA446095CD2F1E018981A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>7</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Лист1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <contains-null>true</contains-null>
              <collation flag='0' name='LRU_RRU' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_7F31AE43BFFA446095CD2F1E018981A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infection_count</remote-alias>
              <ordinal>3</ordinal>
              <family>Лист1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24327</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_7F31AE43BFFA446095CD2F1E018981A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percent_population_infected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percent_population_infected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percent_population_infected</remote-alias>
              <ordinal>4</ordinal>
              <family>Лист1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63024</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Лист1_7F31AE43BFFA446095CD2F1E018981A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Лист1' id='Лист1_7F31AE43BFFA446095CD2F1E018981A5'>
            <properties context=''>
              <relation connection='excel-direct.04lgsry1lg818p1255m3x1jl7ips' name='Лист1' table='[Лист1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
                  <column datatype='integer' name='highest_infection_count' ordinal='3' />
                  <column datatype='real' name='percent_population_infected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global  numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Лист1 (TableauTable1)' name='federated.002dpc20dqdiij1ahlkeg1h6licq' />
          </datasources>
          <datasource-dependencies datasource='federated.002dpc20dqdiij1ahlkeg1h6licq'>
            <column datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
            <column-instance column='[death_percentage]' derivation='Sum' name='[sum:death_percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.002dpc20dqdiij1ahlkeg1h6licq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.002dpc20dqdiij1ahlkeg1h6licq].[sum:death_percentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.002dpc20dqdiij1ahlkeg1h6licq].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.002dpc20dqdiij1ahlkeg1h6licq].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.002dpc20dqdiij1ahlkeg1h6licq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.002dpc20dqdiij1ahlkeg1h6licq].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.002dpc20dqdiij1ahlkeg1h6licq].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.002dpc20dqdiij1ahlkeg1h6licq].[sum:death_percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.002dpc20dqdiij1ahlkeg1h6licq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.002dpc20dqdiij1ahlkeg1h6licq].[:Measure Names]' value='182' />
            <format attr='height' value='116' />
            <format attr='text-format' field='[federated.002dpc20dqdiij1ahlkeg1h6licq].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.002dpc20dqdiij1ahlkeg1h6licq].[sum:death_percentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#91c7f9' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f0f3fa' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#898989' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.002dpc20dqdiij1ahlkeg1h6licq].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.813093900680542' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.002dpc20dqdiij1ahlkeg1h6licq].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{114A060A-2B97-4AB6-8C44-527F1A854040}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths Count Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Лист1 (TableauTable2)' name='federated.1ylktlz1rl0yq91dztl9019qr6wq' />
          </datasources>
          <datasource-dependencies datasource='federated.1ylktlz1rl0yq91dztl9019qr6wq'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths_count]' derivation='Sum' name='[sum:total_deaths_count:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_deaths_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1ylktlz1rl0yq91dztl9019qr6wq].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ylktlz1rl0yq91dztl9019qr6wq].[none:location:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1ylktlz1rl0yq91dztl9019qr6wq].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2963535785675049' />
                <format attr='mark-color' value='#af5959' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ylktlz1rl0yq91dztl9019qr6wq].[sum:total_deaths_count:qk]</rows>
        <cols>[federated.1ylktlz1rl0yq91dztl9019qr6wq].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{87F68786-5B9F-4460-A70C-4BB44F50925E}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Лист1 (TableauTable3)' name='federated.1cba9v71qzzwu1157k1mu0kb4x71' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1cba9v71qzzwu1157k1mu0kb4x71'>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[percent_population_infected]' role='measure' type='quantitative' />
            <column-instance column='[percent_population_infected]' derivation='Sum' name='[sum:percent_population_infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1cba9v71qzzwu1157k1mu0kb4x71].[Longitude (generated)]' field-type='quantitative' max='20565750.991106469' min='-15683977.667899709' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1cba9v71qzzwu1157k1mu0kb4x71].[Latitude (generated)]' field-type='quantitative' max='13052733.07219347' min='-4737371.6890404373' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1cba9v71qzzwu1157k1mu0kb4x71].[sum:percent_population_infected:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1cba9v71qzzwu1157k1mu0kb4x71].[sum:percent_population_infected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1cba9v71qzzwu1157k1mu0kb4x71].[none:location:nk]' />
              <color column='[federated.1cba9v71qzzwu1157k1mu0kb4x71].[sum:percent_population_infected:qk]' />
              <geometry column='[federated.1cba9v71qzzwu1157k1mu0kb4x71].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1cba9v71qzzwu1157k1mu0kb4x71].[Latitude (generated)]</rows>
        <cols>[federated.1cba9v71qzzwu1157k1mu0kb4x71].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CCD1E4E6-4EF8-43E9-ABF2-FA5FD006EA28}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Лист1 (TableauTable4)' name='federated.0bc5nds1vh2bg6112uhvk1pbv835' />
          </datasources>
          <datasource-dependencies datasource='federated.0bc5nds1vh2bg6112uhvk1pbv835'>
            <column-instance column='[percent_population_infected]' derivation='Avg' name='[avg:percent_population_infected:qk]' pivot='key' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[percent_population_infected]' derivation='Avg' forecast-column-base='[avg:percent_population_infected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:percent_population_infected:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[percent_population_infected]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:date:nk]'>
            <groupfilter function='level-members' level='[none:date:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:date:nk]</column>
            <column>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0bc5nds1vh2bg6112uhvk1pbv835].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0bc5nds1vh2bg6112uhvk1pbv835].[tmn:date:qk]' value='321' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:location:nk]' />
              <text column='[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:location:nk]' />
              <color column='[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:Forecast Indicator:nk]' />
              <text column='[federated.0bc5nds1vh2bg6112uhvk1pbv835].[fVal:avg:percent_population_infected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[fVal:avg:percent_population_infected:qk]</rows>
        <cols>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{7FA480B5-7083-4245-BB53-28A83746AD0A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98148' id='9' param='horz' type-v2='layout-flow' w='99064' x='468' y='926'>
            <zone h='98148' id='7' type-v2='layout-basic' w='89702' x='468' y='926'>
              <zone h='31134' id='3' name='Sheet 1' w='39497' x='468' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='67014' id='5' name='Sheet 2' w='39497' x='468' y='32060'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49074' id='6' name='Sheet 3' w='50205' x='39965' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49074' id='11' name='Sheet 4' w='40843' x='39965' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49074' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:location:nk]&#10;[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:Forecast Indicator:nk]' type-v2='color' w='9362' x='80808' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98148' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='926'>
              <zone h='7523' id='10' name='Sheet 3' pane-specification-id='2' param='[federated.1cba9v71qzzwu1157k1mu0kb4x71].[sum:percent_population_infected:qk]' type-v2='color' w='9362' x='90170' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='13' param='vert' type-v2='layout-flow' w='99064' x='468' y='926'>
                <zone fixed-size='241' h='31134' id='3' is-fixed='true' name='Sheet 1' w='39497' x='468' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49074' id='6' is-fixed='true' name='Sheet 3' w='50205' x='39965' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7523' id='10' name='Sheet 3' pane-specification-id='2' param='[federated.1cba9v71qzzwu1157k1mu0kb4x71].[sum:percent_population_infected:qk]' type-v2='color' w='9362' x='90170' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='67014' id='5' is-fixed='true' name='Sheet 2' w='39497' x='468' y='32060'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49074' id='11' is-fixed='true' name='Sheet 4' w='40843' x='39965' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49074' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:location:nk]&#10;[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:Forecast Indicator:nk]' type-v2='color' w='9362' x='80808' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ED274E44-8D6D-419F-8095-18DBEAC1FAFF}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.002dpc20dqdiij1ahlkeg1h6licq].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8BD011FD-2F24-4BE5-98FD-74D78526A22A}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ylktlz1rl0yq91dztl9019qr6wq].[sum:total_deaths_count:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ylktlz1rl0yq91dztl9019qr6wq].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F5FADAE-14CE-4DD4-996D-655E855DD250}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1cba9v71qzzwu1157k1mu0kb4x71].[sum:percent_population_infected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cba9v71qzzwu1157k1mu0kb4x71].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{7B370E6B-C7B2-413E-9E9D-A2256600D00F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:location:nk]&#10;[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:Calculation_333547898798780417:qk]</field>
            <field>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:Calculation_333547898798800898:qk]</field>
            <field>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:Forecast Indicator:nk]</field>
            <field>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:date:nk]</field>
            <field>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:location:nk]</field>
            <field>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6B69334-A769-4248-9C7F-FA013117327F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:Forecast Indicator:nk]</field>
              <field>[federated.0bc5nds1vh2bg6112uhvk1pbv835].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BD111C14-1120-4330-B109-9AD9F6A54F71}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      ASCq2v8HQ0LqGAdPiGIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='86' name='Sheet 1' width='192'>
      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
      ozY1VCp69OzDls0bSThzCpPJRMKZU2zZvJEePftQQ2X5IygpKeHNmTGsWb2CrDt3gNJ9xqKF
      c/Bp2JCGjR6/PzYvN5cjXx2mZ8++5eapjrS0VA7s32fxvcyb8wY9evax2FsA7P9sD23ahuHp
      af1ewraMKWNLn6raS1vIO4AV1j6M+nD9OqD0WneniM7MmrOQ99euZM2qf6PT6fCsU4fIyKH0
      6Tfw/jH+/oGMnzCZ5Utj7394M37C5Ao3phqNhhlvzGH9+6sZ/vIL5OXm4ubuTvfuvRgWFY1a
      /dOP7MiROLzr1bf5HL8yHh61+e7CeZYvjUWn01G/fgOiXh5Bly7PWoy7fv0aSUnfEzNjttW5
      KhtTXFzE9KmT6RDeiX79Sy/P2tKnqvTSFnKLJPFQnDgez949u5jxxuzfdXMst0gS/3f0ej2n
      T51k1KvjHvqVITkFEn84e3t7xoyb+LCXAcg7gFA4CYBQNAmAUDQJgFA0CYBQNAmAUDQJgFA0
      CYBQNAmAUDQJgFA0CYBQNAmAUDQJgFA0CYBQNAmAUDQJgFA0CYBQNAmAUDQJgFC0/wFKjuJd
      oxmmFAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      gP8Pfvlz7kWN21MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      yV7x/wNVrpdM5G7hLAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      FRZrt6tWAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
